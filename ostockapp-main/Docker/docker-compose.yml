version: '2.1'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  redisserver:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"
  keycloak:
    image: codingpuss/keycloak-silicon:16.1.1
    restart: always
    env_file: ./keycloak.env
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
  configserver:
    image: blackmaven/config-server:latest
    ports:
      - "8071:8071"
    environment:
      #ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
      SERVER_PORT: "8071"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: blackmaven/eureka-server:latest
    ports:
      - "8070:8070"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gatewayserver:
    image: blackmaven/apigateway:latest
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SPRING_CLOUD_CONFIG_URI: "http://configserver:8071"
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED: "true"
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWERCASESERVICEID: "true"
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER-CASE-SERVICE-ID: "true"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"
  licensingservice:
    image: blackmaven/licensing-service:latest
    environment:
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8180:8080"
    networks:
      - backend
  organizationservice:
    image: blackmaven/organization-service:latest
    environment:
      PROFILE: "dev"
      SPRING_CLOUD_CONFIG_PROFILE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      backend:
        aliases:
          - "organization-service"
networks:
  backend:
    driver: bridge
